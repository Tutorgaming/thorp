# General parameters
robot_frame: base_footprint
global_frame: map

oscillation_timeout: 8.0
oscillation_distance: 0.02

mbf_tolerance_check: true       # allow mbf to overrule tolerances on nav_core controllers

# Local planner parameters
controllers:
  - {name: TrajPlanner,     type: base_local_planner/TrajectoryPlannerROS}
  - {name: DWAPlanner,      type: dwa_local_planner/DWAPlannerROS}
  - {name: TebPlanner,      type: teb_local_planner/TebLocalPlannerROS}
controller_frequency:  8.0      # Hz
controller_patience:   2.0      # seconds; abort if the local planner does not return within that time
controller_max_retries:  0      # limit consecutive failed calls to local planner
controller_lock_costmap: true   # lock costmap as in move_base, or let planner to do itself

# Global planner parameters
planners:
  - {name: NavfnPlanner,    type: navfn/NavfnROS}
  - {name: GlobalPlanner,   type: global_planner/GlobalPlanner}
  - {name: CarrotPlanner,   type: carrot_planner/CarrotPlanner}
planner_frequency:  1.0         # replan every second to addapt to changing conditions
planner_patience:   5.0         # seconds; abort if the global planner does not return within that time
planner_max_retries:  3         # limit consecutive failed calls to global planner
planner_lock_costmap: true      # lock costmap as in move_base, or let planner to do itself

# Recovery parameters
recovery_patience: 10.0          # seconds; abort if a recovery behavior does not return within that time

# Costmap parameters
shutdown_costmaps: false        # stop updating costmaps when not navigating to save CPU?
